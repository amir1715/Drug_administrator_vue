{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"LCD\"\n};\nconst _hoisted_3 = {\n  class: \"hours\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"divider\"\n}, \":\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = {\n  class: \"minutes\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"divider\"\n}, \":\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = {\n  class: \"seconds\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString($data.hours), 1\n  /* TEXT */\n  ), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.minutes), 1\n  /* TEXT */\n  ), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, _toDisplayString($data.seconds), 1\n  /* TEXT */\n  )])]);\n}","map":{"version":3,"mappings":";;EAgCOA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;gCACXC,oBAA4B,KAA5B,EAA4B;EAAvBD,KAAK,EAAC;AAAiB,CAA5B,EAAqB,GAArB,EAAsB;AAAA;AAAtB;;;EACKA,KAAK,EAAC;;;gCACXC,oBAA4B,KAA5B,EAA4B;EAAvBD,KAAK,EAAC;AAAiB,CAA5B,EAAqB,GAArB,EAAsB;AAAA;AAAtB;;;EACKA,KAAK,EAAC;;;uBANfE,oBAQM,KARN,cAQM,CAPJD,oBAMM,KANN,cAMM,CALJA,oBAAoC,KAApC,cAAoCE,iBAAdC,WAAc,CAApC,EAA2B;EAAA;EAA3B,CAKI,EAJJC,UAII,EAHJJ,oBAAwC,KAAxC,cAAwCE,iBAAhBC,aAAgB,CAAxC,EAA+B;EAAA;EAA/B,CAGI,EAFJE,UAEI,EADJL,oBAAwC,KAAxC,cAAwCE,iBAAhBC,aAAgB,CAAxC,EAA+B;EAAA;EAA/B,CACI,CANN,CAOI,CARN","names":["class","_createElementVNode","_createElementBlock","_toDisplayString","$data","_hoisted_4","_hoisted_6"],"sourceRoot":"","sources":["/home/amir/Desktop/Drug_vue/Drug_administrator_vue/src/components/Clock.vue"],"sourcesContent":["<script>\nexport default {\n  name: \"DigitalClock\",\n  data() {\n    return {\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    }\n  },\n  mounted() {\n    setInterval(() => this.setTime(), 1000)\n  },\n  methods: {\n    setTime() {\n      const date = new Date();\n      let hours = date.getHours();\n      let minutes = date.getMinutes();\n      let seconds = date.getSeconds();\n      hours = hours <= 9 ? `${hours}`.padStart(2, 0) : hours;\n      minutes = minutes <= 9 ? `${minutes}`.padStart(2, 0) : minutes;\n      seconds = seconds <= 9 ? `${seconds}`.padStart(2, 0) : seconds;\n      this.hours = hours;\n      this.minutes = minutes;\n      this.seconds = seconds;\n    }\n  }\n}\n</script>\n\n<template>\n \n  <div class=\"container\">\n    <div class=\"LCD\">\n      <div class=\"hours\">{{ hours }}</div>\n      <div class=\"divider\">:</div>\n      <div class=\"minutes\">{{ minutes }}</div>\n      <div class=\"divider\">:</div>\n      <div class=\"seconds\">{{ seconds }}</div>\n    </div>\n  </div>\n</template>\n\n"]},"metadata":{},"sourceType":"module"}